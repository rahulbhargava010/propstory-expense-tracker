{"version":3,"sources":["assets/alert.png","components/CalcDrawer.js","components/ResultComponent.js","components/KeyPadComponent.js","components/Dashboard.js","components/NotLoginView.js","components/AddExpense.js","components/AddCity.js","components/AddProject.js","components/AddCompany.js","components/Home.js","components/Login.js","components/Register.js","components/Footer.js","components/Header.js","components/Table.js","components/ViewExpense.js","components/FbExpenseTable.js","components/AutomateExpense/FbExpense.js","components/ManageUsersTable.js","components/AssignedProjects.js","components/ManageUsers.js","components/AddCampaignName.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","list","paddingTop","width","fullList","CalcDrawer","classes","React","useState","right","state","setState","result","setResult","onClick","button","calculate","reset","backspace","checkResult","includes","replace","eval","e","slice","toggleDrawer","anchor","open","event","type","key","className","role","onKeyDown","map","Fragment","style","position","top","outline","fontSize","color","borderRadius","padding","cursor","backgroundColor","size","onClose","onOpen","ResultComponent","this","props","Component","KeyPadComponent","name","target","localStorage","getItem","TemporaryDrawer","left","setOpen","handleClick","_Logout","removeItem","window","location","href","Navbar","bg","expand","Button","Brand","Typography","component","variant","Drawer","clsx","Divider","List","ListItem","ListItemIcon","MonetizationOn","ListItemText","primary","Receipt","LocationCity","Business","Collapse","in","timeout","unmountOnExit","disablePadding","nested","ViewList","root","display","justifyContent","alignItems","lineHeight","Types","height","flexDirection","src","Alert","token","date","Date","getMonth","getDate","getFullYear","elevation","theme","paper","marginTop","spacing","avatar","margin","palette","secondary","main","form","submit","fontWeight","AddExpense","show","setShow","company","setCompany","campaignNames","setCampaignNames","campaignName","setCampaignName","city","setCity","project","setProject","actualLeads","setActualLeads","totalSpending","setTotalSpending","cpl","setCpl","campaignData","setCampaignData","checkCPL","Number","toFixed","useEffect","handleGetCompanies","handleGetProjects","handleClose","reason","alert","yesterday","setDate","document","getElementById","valueAsDate","axios","post","project_id","then","response","console","log","data","campaigns","catch","error","Container","maxWidth","Avatar","paddingBottom","noValidate","onSubmit","handleExpenseSubmit","Grid","container","item","xs","sm","InputLabel","id","class","onChange","value","companies","_id","required","projects","filter","proj","campaign","plannedLeads","campaignStartDate","totalBudget","TextField","autoComplete","fullWidth","onBlur","label","autoFocus","disabled","lg","shrink","htmlFor","justify","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","Body","Snackbar","autoHideDuration","severity","AddCity","handleCitySubmit","options","headers","AddProject","cities","setCities","get","err","handleProjectSubmit","AddCompany","handleCompanySubmit","Home","handleSubmit","a","preventDefault","email","password","PureComponent","Copyright","align","Link","Login","CssBaseline","handleLoginSubmit","FormControlLabel","control","Checkbox","Box","mt","Authorization","Register","setCompanies","handleRegisterSubmit","Footer","columns","minWidth","edit","onchange","updateAllocation","hidden","maxHeight","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","totalLead","clicks","impressions","totalAllocation","rows","spending","allocation","ID","SPENT_ON","spendingDate","CAMPAIGN_TYPE","campaignType","ACTUAL_LEADS","ALLOCATIONS","CPL","CLICK","IMPRESSIONS","TOTAL_SPENDING","parseInt","TOTAL_BUDGET","CAMPAIGN_START_DATE","PLANNED_LEADS","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","rowSpan","colSpan","parseFloat","TableBody","row","hover","tabIndex","code","format","onEditAllocation","textAlign","onPressEdit","onPressDelete","TablePagination","rowsPerPageOptions","count","length","onChangePage","newPage","onChangeRowsPerPage","ViewExpense","modalShow","setModalShow","selectedData","setSelectedData","deleteId","setDeleteId","alocModal","setAlocModal","openDeleteAlert","setOpenDeleteAlert","loading","setLoading","setCampaign","viewDate","setViewDate","startDate","endDate","addDays","handleChangeCampaign","handleCloseAlert","handleChangeCampaignName","handleChangeProject","start","moment","end","spendings","expense_id","expenseid","parsedData","resData","push","fileName","exportFromJSON","exportType","downloadCsv","startIcon","bottom","textTransform","placeholder","border","direction","selection","moveRangeOnFirstSelection","months","ranges","centered","handleUpdateExpense","animation","FbExpenseTables","expense","CAMPAIGN_NAME","campaign_name","CLICKS","CPC","cpc","CPM","cpm","CPP","cpp","CTR","ctr","REACH","reach","date_start","FbExpense","setCampaigns","getCampaigns","campaign_id","start_date","end_date","source","chip","rootarray","flexWrap","listStyle","boxShadow","AssignedProjects","user","setProjects","user_id","company_id","Chip","StatusSwitch","withStyles","switchBase","red","green","checked","track","Switch","ManageUsersTable","allProjects","marginRight","users","enable","status","callUserSubmit","handleChangeSwitch","IconButton","handleEdit","modal","papermodal","background","shadows","assignProjects","obj","userId","userhere","ManageUsers","companyUsers","setCompanyUsers","setData","assignProjectId","setAssignProjectId","openSnackBar","setOpenSnackBar","handleCloseSnackBar","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","AddCampaignName","planned_leads","campaign_start_date","total_budget","setTimeout","reload","helperText","userin","userCompany","App","componentWillMount","Lastclear","Time_now","getTime","setItem","_this","region","password2","handleViewExpenseSubmit","exact","path","render","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ccc6edc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.52ff4194.png\";","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ResultComponent from \"./ResultComponent\";\r\nimport KeyPadComponent from \"./KeyPadComponent\";\r\nimport DialpadIcon from \"@material-ui/icons/Dialpad\";\r\nimport { AiOutlineCalculator } from \"react-icons/ai\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    paddingTop: \"50%\",\r\n    width: 350,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function CalcDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    right: false,\r\n  });\r\n  const [result, setResult] = React.useState(\"\");\r\n\r\n  const onClick = (button) => {\r\n    if (button === \"=\") {\r\n      calculate();\r\n    } else if (button === \"C\") {\r\n      reset();\r\n    } else if (button === \"CE\") {\r\n      backspace();\r\n    } else {\r\n      setResult(result + button);\r\n    }\r\n  };\r\n\r\n  const calculate = () => {\r\n    var checkResult = \"\";\r\n    if (result.includes(\"--\")) {\r\n      checkResult = result.replace(\"--\", \"+\");\r\n    } else {\r\n      checkResult = result;\r\n    }\r\n\r\n    try {\r\n      setResult((eval(checkResult) || \"\") + \"\");\r\n    } catch (e) {\r\n      setResult(\"error\");\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setResult(\"\");\r\n  };\r\n\r\n  const backspace = () => {\r\n    setResult(result.slice(0, -1));\r\n  };\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <div className=\"calculator-body\">\r\n        <ResultComponent result={result} />\r\n        <KeyPadComponent onClick={onClick} />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n\r\n          <a\r\n          \r\n            onClick={toggleDrawer(anchor, true)}\r\n            style={{\r\n              position: \"absolute\",\r\n              right: 10,\r\n              top: 70,\r\n              outline: \"none\",\r\n              fontSize: 20,\r\n              color: \"#fff\",\r\n              // boxShadow: \"1px 5px 10px #afafaf\",\r\n              borderRadius: 8,\r\n              padding: 8,\r\n              cursor: \"pointer\",\r\n              backgroundColor: \"#f50057\"\r\n            }}\r\n          >Calculator <AiOutlineCalculator size=\"1.5em\" /></a>\r\n          <SwipeableDrawer\r\n            style={{ backgroundColor: \"rgba(0,0,0,0)\" }}\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nclass ResultComponent extends Component {\r\n\r\n\r\n    render() {\r\n        let {result} = this.props;\r\n        return (\r\n            <div className=\"result\">\r\n                <p>{result}</p>\r\n            </div>\r\n    )\r\n        ;\r\n    }\r\n}\r\n\r\n\r\nexport default ResultComponent;","import React, {Component} from 'react';\r\n\r\nclass KeyPadComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"button\">\r\n                <button name=\"(\" onClick={e => this.props.onClick(e.target.name)}>(</button>\r\n                <button name=\"CE\" onClick={e => this.props.onClick(e.target.name)}>⌫</button>\r\n                <button name=\")\" onClick={e => this.props.onClick(e.target.name)}>)</button>\r\n                <button name=\"C\" onClick={e => this.props.onClick(e.target.name)}>C</button><br/>\r\n\r\n\r\n                <button name=\"1\" onClick={e => this.props.onClick(e.target.name)}>1</button>\r\n                <button name=\"2\" onClick={e => this.props.onClick(e.target.name)}>2</button>\r\n                <button name=\"3\" onClick={e => this.props.onClick(e.target.name)}>3</button>\r\n                <button name=\"+\" onClick={e => this.props.onClick(e.target.name)}>+</button><br/>\r\n\r\n\r\n                <button name=\"4\" onClick={e => this.props.onClick(e.target.name)}>4</button>\r\n                <button name=\"5\" onClick={e => this.props.onClick(e.target.name)}>5</button>\r\n                <button name=\"6\" onClick={e => this.props.onClick(e.target.name)}>6</button>\r\n                <button name=\"-\" onClick={e => this.props.onClick(e.target.name)}>-</button><br/>\r\n\r\n                <button name=\"7\" onClick={e => this.props.onClick(e.target.name)}>7</button>\r\n                <button name=\"8\" onClick={e => this.props.onClick(e.target.name)}>8</button>\r\n                <button name=\"9\" onClick={e => this.props.onClick(e.target.name)}>9</button>\r\n                <button name=\"*\" onClick={e => this.props.onClick(e.target.name)}>x</button><br/>\r\n\r\n\r\n                <button name=\".\" onClick={e => this.props.onClick(e.target.name)}>.</button>\r\n                <button name=\"0\" onClick={e => this.props.onClick(e.target.name)}>0</button>\r\n                <button name=\"=\" onClick={e => this.props.onClick(e.target.name)}>=</button>\r\n                <button name=\"/\" onClick={e => this.props.onClick(e.target.name)}>÷</button><br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default KeyPadComponent;","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport CloudCircleIcon from \"@material-ui/icons/CloudCircle\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\n\r\nimport {\r\n  Dashboard,\r\n  Receipt,\r\n  MonetizationOn,\r\n  LocationCity,\r\n  ViewList,\r\n  Business,\r\n} from \"@material-ui/icons\";\r\nimport { ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport \"../assets/style.css\";\r\nimport axios from \"axios\";\r\n\r\nconst role = localStorage.getItem(\"userRole\");\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  const _Logout = () => {\r\n    localStorage.removeItem(\"LoginToken\");\r\n    window.location.href = \"https://expenses.propstory.com/\";\r\n  };\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <Divider />\r\n\r\n      <List>\r\n        {role == \"PSADMIN\" ? (\r\n          <>\r\n            <a href=\"/addexpense\">\r\n              <ListItem button key=\"AddExpense\">\r\n                <ListItemIcon>\r\n                  <MonetizationOn />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Add Expense\" />\r\n              </ListItem>\r\n            </a>\r\n            <a href=\"/addproject\">\r\n              <ListItem button key=\"AddProject\">\r\n                <ListItemIcon>\r\n                  <Receipt />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Add Project\" />\r\n              </ListItem>\r\n            </a>\r\n            <a href=\"/add_campaign_name\">\r\n              <ListItem button key=\"AddCampaignName\">\r\n                <ListItemIcon>\r\n                  <AddToPhotosIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Add Campaign Name\" />\r\n              </ListItem>\r\n            </a>\r\n            \r\n            <a href=\"/addcity\">\r\n              <ListItem button key=\"AddCity\">\r\n                <ListItemIcon>\r\n                  <LocationCity />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Add City\" />\r\n              </ListItem>\r\n            </a>\r\n            <a href=\"/addcompany\">\r\n              <ListItem button key=\"AddCompany\">\r\n                <ListItemIcon>\r\n                  <Business />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Add Company\" />\r\n              </ListItem>\r\n            </a>\r\n            <Divider />\r\n            <a href=\"/manageusers\">\r\n              <ListItem button key=\"ManageUsers\">\r\n                <ListItemIcon>\r\n                  <GroupIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Manage Users\" />\r\n              </ListItem>\r\n            </a>\r\n\r\n            <ListItem button onClick={handleClick} key=\"ViewAutomatedExpense\">\r\n              <ListItemIcon>\r\n                <UpdateIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"View Automated Expense\" />\r\n              {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                <a href=\"/automated_expense/facebook\">\r\n                  <ListItem button className={classes.nested}>\r\n                    <ListItemIcon>\r\n                      <FacebookIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Facebook\" />\r\n                  </ListItem>\r\n                </a>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <CloudCircleIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Taboola\" />\r\n                </ListItem>\r\n              </List>\r\n            </Collapse>\r\n          </>\r\n        ) : null}\r\n        <a href=\"/viewexpense\">\r\n          <ListItem button key=\"ViewExpense\">\r\n            <ListItemIcon>\r\n              <ViewList />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"View Expense\" />\r\n          </ListItem>\r\n        </a>\r\n      </List>\r\n      <div className=\"logoutButton\" onClick={_Logout}>\r\n        <h4 style={{ color: \"#fff\" }}>Logout</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment key=\"left\">\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          {}\r\n          <Button className=\"Button\" onClick={toggleDrawer(\"left\", true)}>\r\n            <MenuIcon fontSize=\"large\" />\r\n          </Button>\r\n          <Navbar.Brand href=\"#home\">\r\n            <Typography component=\"h2\" variant=\"p\">\r\n              Propstory\r\n            </Typography>\r\n          </Navbar.Brand>\r\n          {/* <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#home\">Home</Nav.Link>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse> */}\r\n        </Navbar>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          open={state[\"left\"]}\r\n          onClose={toggleDrawer(\"left\", false)}\r\n        >\r\n          {list(\"left\")}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Alert from \"../assets/alert.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: 60,\r\n    lineHeight: 2,\r\n  },\r\n});\r\n\r\nexport default function Types() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex align-items-center justify-content-center pt-5\"\r\n      style={{ height: 600, flexDirection: \"column\" }}\r\n    >\r\n      <img src={Alert} style={{ width: 200 }} />\r\n      <h1 className=\"linknotlogin\">\r\n        Your haven't logged in yet. Please Sign in from\r\n        \r\n      </h1>\r\n      <a\r\n          href=\"https://expenses.propstory.com/users/login\"\r\n          style={{ color: \"#15eda3\", fontSize: 60 }}\r\n        >\r\n          Here\r\n        </a>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport axios from \"axios\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport NotLoginView from \"./NotLoginView\";\r\n\r\nconst token = localStorage.getItem(\"LoginToken\");\r\nconst userin = localStorage.getItem(\"LoggedinUser\");\r\nconst userCompany = localStorage.getItem(\"userCompany\");\r\nvar date = new Date();\r\n\r\nvar formatedDate = `${date.getMonth()+1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n\r\nconst options = {\r\n  headers: { Authorization: \"Bearer \" + token },\r\n};\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddExpense(props) {\r\n  const classes = useStyles();\r\n  const [show, setShow] = React.useState(props.show);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [campaignNames, setCampaignNames] = React.useState([]);\r\n  const [campaignName, setCampaignName] = React.useState(\"\");\r\n  const [city, setCity] = React.useState(\"\");\r\n  const [project, setProject] = React.useState(\"\");\r\n  const [actualLeads, setActualLeads] = React.useState(\"\");\r\n  const [totalSpending, setTotalSpending] = React.useState(\"\");\r\n  const [cpl, setCpl] = React.useState(0);\r\n  const [campaignData, setCampaignData] = React.useState([]);\r\n  const handleChangeCampaign = (event) => {\r\n    setCity(event.target.value);\r\n  };\r\n  const handleChangeProject = (event) => {\r\n    setProject(event.target.value);\r\n  };\r\n\r\n  const handleChangeCompany = event => {\r\n    setCompany(event.target.value);\r\n  };\r\n  \r\n  const handleChangeCampaignName = event => {\r\n    const campaignData = campaignNames.filter(campaign => campaign._id == event.target.value);\r\n    setCampaignName(event.target.value);\r\n    console.log(campaignData[0]);\r\n    setCampaignData({plannedLeads: campaignData[0].plannedLeads, campaignStartDate: campaignData[0].campaignStartDate, totalBudget: campaignData[0].totalBudget})\r\n\r\n  }\r\n\r\n  const checkCPL = () => {\r\n    if(!actualLeads == \"\" && !totalSpending == \"\" && actualLeads > 0){\r\n      setCpl(Number(totalSpending / actualLeads).toFixed(2))\r\n    }\r\n    else {\r\n      setCpl(0)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.handleGetCompanies();\r\n    props.handleGetProjects();\r\n  }, []);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(props.alert);\r\n\r\n  }, [props.alert])\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n      const _this = this;\r\n      var yesterday = new Date(new Date().setDate(new Date().getDate()-1));\r\n\r\n      document.getElementById('outlined-spendingDate').valueAsDate = yesterday;\r\n      axios\r\n        .post(\r\n          \"https://expenses.propstory.com/campaign/getCampaignNames\",\r\n          {\r\n            project_id: project,\r\n          }\r\n        )\r\n        .then(function (response) {\r\n          console.log(\"*********\");\r\n          console.log(response.data);\r\n          setCampaignNames(response.data.campaigns);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n   \r\n  }, [project])\r\n\r\n  if (token == null) {\r\n    return <NotLoginView />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Dashboard />\r\n        <Container maxWidth=\"md\">\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography style={{ paddingBottom: 16 }} component=\"h1\">\r\n              Add Your Daily Expense\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={props.handleExpenseSubmit}\r\n            >\r\n              <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={3}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Select Company\r\n              </InputLabel>\r\n             \r\n              <select\r\n                class=\"custom-select\"\r\n                name=\"company\"\r\n                id=\"company\"\r\n                onChange={handleChangeCompany}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                 <option key=\"\" value=\"\">\r\n                            Select Company\r\n                          </option>\r\n                 {props.companies && props.companies.map(company => {\r\n                  return <option value={company._id}>{company.name}</option>;\r\n                })}\r\n              </select>\r\n            </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Select Project\r\n                  </InputLabel>\r\n\r\n                  <select\r\n                    className=\"custom-select\"\r\n                    id=\"projectSelect\"\r\n                    name=\"project\"\r\n                    required\r\n                    value={project}\r\n                    onChange={handleChangeProject}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                     <option key=\"\" value=\"\">\r\n                            Select Project\r\n                          </option>\r\n                    {props.projects &&\r\n                      props.projects.filter(proj => proj.company == company).map((project) => {\r\n                        return (\r\n                          <option key={project._id} value={project._id}>\r\n                            {project.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Select Campaign Type\r\n                  </InputLabel>\r\n\r\n                  <select\r\n                    className=\"custom-select\"\r\n                    id=\"projectSelect\"\r\n                    name=\"campaignType\"\r\n                    value={city}\r\n                    onChange={handleChangeCampaign}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    <option key=\"\" value=\"\">\r\n                            Select Campaign Type\r\n                          </option>\r\n                    <option value=\"GDN\">Google - GDN</option>\r\n                    <option value=\"GSN\">Google - GSN</option>\r\n                    <option value=\"Google\">Google</option>\r\n                    <option value=\"Facebook Lead Form\">\r\n                      Facebook Lead Form\r\n                    </option>\r\n                    <option value=\"Facebook LP\">Facebook LP</option>\r\n                    <option value=\"Taboola\">Taboola</option>\r\n                    <option value=\"Calls/Chats\">Calls/Chats</option>\r\n                  </select>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Select Campaign Name\r\n                  </InputLabel>\r\n\r\n                  <select\r\n                    className=\"custom-select\"\r\n                    id=\"campaignName\"\r\n                    name=\"campaignName\"\r\n                    value={campaignName}\r\n                    onChange={handleChangeCampaignName}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                     <option key=\"\" value=\"\">\r\n                          Select Campaign Name\r\n                          </option>\r\n                    {campaignNames &&\r\n                      campaignNames.map((campaignName) => {\r\n                        return (\r\n                          <option key={campaignName._id} value={campaignName._id}>\r\n                            {campaignName.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    autoComplete=\"actualLeads\"\r\n                    name=\"actualLeads\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={actualLeads}\r\n                    onChange={e => setActualLeads(e.target.value)}\r\n                    onBlur={() => checkCPL()}\r\n                    id=\"actualLeads\"\r\n                    label=\"Actual Leads\"\r\n                    autoFocus\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    autoComplete=\"allocation\"\r\n                    name=\"allocation\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"allocation\"\r\n                    label=\"Allocation\"\r\n                    autoFocus\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"plannedLeads\"\r\n                    label=\"Planned Leads\"\r\n                    name=\"plannedLeads\"\r\n                    autoComplete=\"plannedLeads\"\r\n                    size=\"small\"\r\n                    onChange={e => setCampaignData({plannedLeads: e.target.value})}\r\n                    value={campaignData.plannedLeads}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={totalSpending}\r\n                    onChange={e => setTotalSpending(e.target.value)}\r\n                    onBlur={() => checkCPL()}\r\n                    id=\"totalSpending\"\r\n                    label=\"Total Spending\"\r\n                    name=\"totalSpending\"\r\n                    autoComplete=\"totalSpending\"\r\n                    size=\"small\"\r\n                    \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"totalBudget\"\r\n                    label=\"Total Budget\"\r\n                    id=\"totalBudget\"\r\n                    autoComplete=\"totalBudget\"\r\n                    size=\"small\"\r\n                    onChange={e => setCampaignData({totalBudget: e.target.value})}\r\n                    value={campaignData.totalBudget}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"cpl\"\r\n                    label=\"CPL\"\r\n                    id=\"cpl\"\r\n                    disabled\r\n                    value={cpl}\r\n                    autoComplete=\"cpl\"\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"clicks\"\r\n                    label=\"Clicks\"\r\n                    id=\"clicks\"\r\n                    autoComplete=\"clicks\"\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"impressions\"\r\n                    label=\"Impressions\"\r\n                    id=\"impressions\"\r\n                    autoComplete=\"impressions\"\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                    Spending Date\r\n                  </InputLabel>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"spendingDate\"\r\n                    id=\"outlined-spendingDate\"\r\n                    type=\"date\"\r\n                    autoComplete=\"spendingDate\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                    Campaign Start Date\r\n                  </InputLabel>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"campaignStartDate\"\r\n                    id=\"outlined-campaignStartDate\"\r\n                    type=\"date\"\r\n                    autoComplete=\"campaignStartDate\"\r\n                    onChange={e => setCampaignData({campaignStartDate: e.target.value})}\r\n                    value={campaignData.campaignStartDate}\r\n                  />\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Add Expense\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Grid container justify=\"flex-end\"></Grid>\r\n            </form>\r\n          </div>\r\n          <Modal\r\n            show={show}\r\n            onHide={() => setShow(false)}\r\n            dialogClassName=\"modal-90w\"\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                Custom Modal Styling\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body></Modal.Body>\r\n          </Modal>\r\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Added your expense successfully\r\n        </Alert>\r\n      </Snackbar>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Login\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import Box from \"@material-ui/core/Box\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport NotLoginView from \"./NotLoginView\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst token = localStorage.getItem('LoginToken');\r\n\r\nconst options = {\r\n  headers: {'Authorization': 'Bearer '+ token }\r\n \r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\"\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddCity(props) {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(props.alert);\r\n\r\n  }, [props.alert])\r\n\r\n\r\n  const classes = useStyles();\r\n  if (token == null) {\r\n    return <NotLoginView />;\r\n  } else { \r\n  return (<>\r\n  <Dashboard />\r\n    <Container maxWidth=\"md\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LocationCityIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"p\">\r\n          Add Your City\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={props.handleCitySubmit}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"city\"\r\n                name=\"city\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"city\"\r\n                label=\"Enter City\"\r\n                autoFocus\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"region\"\r\n                label=\"Enter Region\"\r\n                name=\"region\"\r\n                autoComplete\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              ADD CITY\r\n            </Button>\r\n          </Grid>\r\n\r\n        </form>\r\n      </div>\r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Added your city successfully\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );}\r\n}\r\n\r\n// export default Login\r\n","import React, {useEffect} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport axios from \"axios\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport NotLoginView from \"./NotLoginView\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst token = localStorage.getItem('LoginToken');\r\n\r\nconst options = {\r\n  headers: {'Authorization': 'Bearer '+ token }\r\n \r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\"\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddProject(props) {\r\n  const classes = useStyles();\r\n\r\n  const [city, setCity] = React.useState(\"\");\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [cities, setCities] = React.useState([]);\r\n\r\n  const handleChangeCity = event => {\r\n    setCity(event.target.value);\r\n  };\r\n  const handleChangeCompany = event => {\r\n    setCompany(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n      props.handleGetCompanies();\r\n\r\n      axios\r\n      .get(\"https://expenses.propstory.com/api/getCities\")\r\n      .then(response => {\r\n        console.log(response);\r\n\r\n        let cities = response.data.cities;\r\n        console.log(cities);\r\n        setCities( cities );\r\n      }, options)\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(props.alert);\r\n\r\n  }, [props.alert])\r\n\r\n\r\n  if (token == null) {\r\n    return <NotLoginView />;\r\n  } else { \r\n  return (\r\n    <>\r\n    <Dashboard />\r\n    <Container maxWidth=\"md\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <ReceiptIcon />\r\n        </Avatar>\r\n        <Typography style={{paddingBottom: 16}} component=\"h1\" variant=\"p\">\r\n          Add Your Project\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={props.handleProjectSubmit}\r\n        >\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"project\"\r\n                label=\"Name of the project\"\r\n                id=\"totalBudget\"\r\n                autoComplete=\"totalBudget\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Select Company\r\n              </InputLabel>\r\n\r\n              <select\r\n                class=\"custom-select\"\r\n                name=\"company\"\r\n                id=\"company\"\r\n                onChange={handleChangeCompany}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                 {props.companies && props.companies.map(company => {\r\n                  return <option value={company._id}>{company.name}</option>;\r\n                })}\r\n              </select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel id=\"demo-simple-select-label\">Select City</InputLabel>\r\n\r\n              <select\r\n                class=\"custom-select\"\r\n                name=\"city\"\r\n                id=\"city\"\r\n                onChange={handleChangeCity}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                   {cities.map(city => {\r\n                  return <option value={city._id}>{city.name}</option>;\r\n                })}\r\n              </select>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Add Project\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid container justify=\"flex-end\"></Grid>\r\n        </form>\r\n      </div>\r\n    \r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Added your project successfully\r\n        </Alert>\r\n      </Snackbar>\r\n  </>\r\n  );}\r\n}\r\n\r\n// export default Login\r\n","import React, {useEffect} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import Box from \"@material-ui/core/Box\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport NotLoginView from \"./NotLoginView\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst token = localStorage.getItem('LoginToken');\r\n\r\nconst options = {\r\n  headers: {'Authorization': 'Bearer '+ token }\r\n \r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddCompany(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(props.alert);\r\n\r\n  }, [props.alert])\r\n\r\n  const classes = useStyles();\r\n  if (token == null) {\r\n    return <NotLoginView />;\r\n    \r\n  } else { \r\n  return (\r\n    <>\r\n    \r\n      <Dashboard />\r\n      <Container maxWidth=\"md\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LocationCityIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"p\">\r\n            Add Your Company\r\n          </Typography>\r\n\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={props.handleCompanySubmit}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"company\"\r\n                  name=\"company\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"company\"\r\n                  label=\"Enter Company\"\r\n                  autoFocus\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Add Company\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"flex-end\"></Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Added your company successfully\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );}\r\n}\r\n\r\n// export default Login\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../assets/style.css\";\r\n// import Nav from \"./Home/Nav\";\r\n// import Content from \"./Home/Content\";\r\n// import Footer from \"./Home/Footer\";\r\n\r\nclass Home extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      email: e.target.email.value,\r\n      password: e.target.password.value,\r\n    });\r\n    console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div class=\"banner-area banner-3\">\r\n          <div class=\"overlay dark-overlay\"></div>\r\n          <div class=\"d-table\">\r\n            <div class=\"d-table-cell\">\r\n              <div class=\"container\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-8 m-auto text-center col-sm-12 col-md-12\">\r\n                    <div class=\"banner-content content-padding\">\r\n                    <h1 class=\"subtitle\">PROPSTORY</h1>\r\n                      <h1 class=\"banner-title\">\r\n                        Propstory Expense Tracker\r\n                      </h1>\r\n                      <p>\r\n                        We are a leading digital marketing services company\r\n                        focused on the vast Real Estate sector. Our long\r\n                        standing clients include top developers in the country\r\n                      </p>\r\n\r\n                      <a href=\"/users/login\" class=\"btn btn-white btn-circled\">\r\n                        lets login\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login(props)  {\r\n        const classes = useStyles();\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"p\">\r\n                Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit = { props.handleLoginSubmit } >\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                    label=\"Remember me\"\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n                <Grid container>\r\n                    <Grid item xs>\r\n                    <Link href=\"#\" variant=\"body2\">\r\n                        Forgot password?\r\n                    </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <Link href=\"/users/register\" variant=\"body2\">\r\n                        {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            </Container>\r\n        );\r\n}\r\n\r\n// export default Login","import React, { useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nconst token = localStorage.getItem(\"LoginToken\");\r\n\r\nconst options = {\r\n  headers: { Authorization: \"Bearer \" + token },\r\n};\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const classes = useStyles();\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [companies, setCompanies] = React.useState([]);\r\n  const handleChangeCompany = (event) => {\r\n    setCompany(event.target.value);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://expenses.propstory.com/api/getCompanies\")\r\n      .then((response) => {\r\n        console.log(response);\r\n\r\n        let companies = response.data.companies;\r\n        console.log(companies);\r\n        setCompanies(companies);\r\n      }, options)\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOpen(props.alert);\r\n  }, [props.alert]);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"p\">\r\n          Sign up\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={props.handleRegisterSubmit}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Select Company\r\n              </InputLabel>\r\n\r\n              <select\r\n                class=\"custom-select\"\r\n                name=\"company\"\r\n                id=\"company\"\r\n                onChange={handleChangeCompany}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                {companies &&\r\n                  companies.map((company) => {\r\n                    return <option value={company._id}>{company.name}</option>;\r\n                  })}\r\n              </select>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password2\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"password2\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/users/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          You have been successfully registered. Please Contact Admin to\r\n          Activate Your Profile.\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { PureComponent } from 'react'\r\n\r\nclass Footer extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>from footer</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { PureComponent } from 'react'\r\nimport {Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\n\r\nclass Header extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">Propstory</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n             \r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nconst role = localStorage.getItem(\"userRole\");\r\n\r\nconst updateAllocation = () => {\r\n  console.log(\"data\");\r\n};\r\n\r\nconst columns = [\r\n  { id: \"ID\", label: \"ID\", display: \"none\" },\r\n  {\r\n    id: \"SPENT_ON\",\r\n    label: \"SPENT ON\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n  { id: \"CAMPAIGN_TYPE\", label: \"CAMPAIGN TYPE\", minWidth: 100 },\r\n\r\n  { id: \"ACTUAL_LEADS\", label: \"ACTUAL LEADS\", minWidth: 100, align: \"center\" },\r\n  {\r\n    id: \"ALLOCATIONS\",\r\n    label: \"ALLOCATIONS\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    edit: true,\r\n    onchange: { updateAllocation },\r\n  },\r\n\r\n  {\r\n    id: \"CPL\",\r\n    label: \"CPL\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"CLICK\",\r\n    label: \"CLICK\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"IMPRESSIONS\",\r\n    label: \"IMPRESSIONS\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"TOTAL_SPENDING\",\r\n    label: \"TOTAL SPENDING\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"TOTAL_BUDGET\",\r\n    label: \"TOTAL BUDGET\",\r\n    hidden: true\r\n  },\r\n  {\r\n    id: \"CAMPAIGN_START_DATE\",\r\n    label: \"CAMPAIGN START DATE\",\r\n    hidden: true\r\n  },\r\n  {\r\n    id: \"PLANNED_LEADS\",\r\n    label: \"PLANNED LEADS\",\r\n    hidden: true\r\n  }\r\n];\r\n\r\nfunction createData(\r\n  ID,\r\n  SPENT_ON,\r\n  CAMPAIGN_TYPE,\r\n  ACTUAL_LEADS,\r\n  ALLOCATIONS,\r\n  CPL,\r\n  CLICK,\r\n  IMPRESSIONS,\r\n  TOTAL_SPENDING,\r\n  TOTAL_BUDGET,\r\n  CAMPAIGN_START_DATE,\r\n  PLANNED_LEADS\r\n) {\r\n  return {\r\n    ID,\r\n    SPENT_ON,\r\n    CAMPAIGN_TYPE,\r\n    ACTUAL_LEADS,\r\n    ALLOCATIONS,\r\n    CPL,\r\n    CLICK,\r\n    IMPRESSIONS,\r\n    TOTAL_SPENDING,\r\n    TOTAL_BUDGET,\r\n    CAMPAIGN_START_DATE,\r\n    PLANNED_LEADS\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  let totalLead = 0;\r\n  let clicks = 0;\r\n  let impressions = 0;\r\n  let totalSpending = 0;\r\n  let totalAllocation = 0;\r\n  const rows =\r\n    props.result &&\r\n    props.result.map((spending) => {\r\n      totalLead += spending.actualLeads;\r\n      clicks += spending.clicks;\r\n      impressions += spending.impressions;\r\n      totalSpending += spending.totalSpending;\r\n      totalAllocation += spending.allocation;\r\n      console.log(spending);\r\n\r\n      // console.log(totalLead)\r\n      return createData(\r\n        spending._id,\r\n        spending.spendingDate,\r\n        spending.campaignType,\r\n        spending.actualLeads,\r\n        spending.allocation,\r\n        spending.cpl,\r\n        spending.clicks,\r\n        spending.impressions,\r\n        parseInt(spending.totalSpending),\r\n        spending.totalBudget,\r\n        spending.campaignStartDate,\r\n        spending.plannedLeads\r\n      );\r\n    });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, display: column.display }}\r\n                  hidden={column.hidden}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n              <TableCell align=\"center\" rowSpan={2} colSpan={3}>ACTIONS</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\" colSpan={2}>\r\n                <h5>TOTAL</h5>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <h6>ACTUAL LEADS: {totalLead} </h6>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <h6>ALLOCATIONS: {totalAllocation} </h6>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <h6>CPL: {Number(totalSpending / totalLead).toFixed(2)}</h6>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <h6>CLICKS: {clicks}</h6>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <h6>IMPRESSIONS: {impressions}</h6>\r\n              </TableCell>\r\n              <TableCell colSpan={4} align=\"left\">\r\n                <h6>TOTAL SPENDING: {parseFloat(totalSpending).toFixed(2)}</h6>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                \r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n\r\n                      return (\r\n                        <TableCell\r\n                          style={{ display: column.display }}\r\n                          key={column.id}\r\n                          align={column.align}\r\n                          hidden={column.hidden}\r\n                        >\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n\r\n                    <TableCell\r\n                      onClick={() => props.onEditAllocation(row)}\r\n                      style={{\r\n                        backgroundColor: \"#3797a4\",\r\n                        fontWeight: 600,\r\n                        fontSize: 10,\r\n                        color: \"#fff\",\r\n                        width: 30,\r\n                        cursor: \"pointer\",\r\n                        textAlign: \"center\"\r\n                      }}\r\n\r\n                    >\r\n                      Update Allocation\r\n                    </TableCell>\r\n                    {role == \"PSADMIN\" ? (\r\n                      <>\r\n                        <TableCell\r\n                          onClick={() => props.onPressEdit(row)}\r\n                          style={{\r\n                            backgroundColor: \"#50d890\",\r\n                            fontWeight: 600,\r\n                            color: \"#fff\",\r\n                            cursor: \"pointer\",\r\n                            width: 10\r\n                          }}\r\n                        >\r\n                          <EditOutlinedIcon />\r\n                        </TableCell>\r\n                        <TableCell\r\n                          onClick={() => props.onPressDelete(row[\"ID\"])}\r\n                          style={{\r\n                            backgroundColor: \"#fe346e\",\r\n                            fontWeight: 600,\r\n                            color: \"#fff\",\r\n                            cursor: \"pointer\",\r\n                            width: 10\r\n                          }}\r\n                        >\r\n                          <DeleteOutlineIcon />\r\n                        </TableCell>\r\n                      </>\r\n                    ) : null}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Table from \"./Table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport NotLoginView from \"./NotLoginView\";\r\nimport CalcDrawer from \"./CalcDrawer\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport \"react-date-range/dist/styles.css\"; // main css file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\r\nimport { addDays } from \"date-fns\";\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport moment from 'moment';\r\nimport Loader from 'react-loader-spinner'\r\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\r\nimport exportFromJSON from 'export-from-json'\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst token = localStorage.getItem(\"LoginToken\");\r\nconst role = localStorage.getItem(\"userRole\");\r\n\r\nconst options = {\r\n  headers: { Authorization: \"Bearer \" + token },\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\nexport default function ViewExpense(props) {\r\n  const classes = useStyles();\r\n  const [project, setProject] = React.useState(\"\");\r\n  const [result, setResult] = React.useState([]);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [selectedData, setSelectedData] = React.useState([]);\r\n  const [city, setCity] = React.useState(\"\");\r\n  const [show, setShow] = React.useState(false);\r\n  const [deleteId, setDeleteId] = React.useState(\"\");\r\n  const [alocModal, setAlocModal] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openDeleteAlert, setOpenDeleteAlert] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [campaign, setCampaign] = React.useState(\"\");\r\n  const [viewDate, setViewDate] = React.useState(false);\r\n  const [campaignNames, setCampaignNames] = React.useState([]);\r\n  const [campaignName, setCampaignName] = React.useState(\"\");\r\n  const [state, setState] = React.useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: addDays(new Date, 7),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n\r\n  const handleChangeCampaign = (event) => {\r\n    setCampaign(event.target.value);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseDeleteAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenDeleteAlert(false);\r\n  };\r\n\r\n  const handleChangeCampaignName = event => {\r\n    setCampaignName(event.target.value);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    props.handleGetProjects();\r\n  }, []);\r\n  const handleChangeProject = (event) => {\r\n    setProject(event.target.value);\r\n  };\r\n\r\n  const _Edit = (data) => {\r\n    setModalShow(true);\r\n    console.log(data);\r\n    setSelectedData(data);\r\n    // setSelectedData({...selectedData, CPL: 0})\r\n  };\r\n\r\n  const _EditAllocation = (data) => {\r\n    setAlocModal(true);\r\n    console.log(data);\r\n    setSelectedData(data);\r\n  };\r\n\r\n\r\n\r\n  const downloadCsv = () => {\r\n    const start = moment(state[0].startDate).format(\"YYYY-MM-DD\")\r\n    const end = moment(state[0].endDate).format(\"YYYY-MM-DD\")\r\n    const parsedData = [];\r\n    result.map((resData) => { \r\n      console.log(resData);\r\n      return parsedData.push({ \"Campaign Type\": resData.campaignType, \"Actual Leads\": resData.actualLeads, \"Allocation\": resData.allocation, \"Total Budget\": resData.totalBudget, \"Total Spending\": resData.totalSpending, \"CPL\": resData.cpl, \"Clicks\": resData.clicks, \"Impressions\": resData.impressions, \"Spending Date\": resData.spendingDate, \"Campaign Start Date\": resData.campaignStartDate }) });\r\n    const data = parsedData;\r\n\r\n    const fileName = campaign + ' ' + 'Expense' + ' ' + start + ' ' + end\r\n    const exportType = 'csv'\r\n    exportFromJSON({ data, fileName, exportType })\r\n  }\r\n\r\n\r\n  \r\n  const handleViewExpenseSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    const start = moment(state[0].startDate).format(\"YYYY-MM-DD\")\r\n    const end = moment(state[0].endDate).format(\"YYYY-MM-DD\")\r\n    setLoading(true)\r\n    setViewDate(false)\r\n\r\n\r\n    axios\r\n      .post(\"https://expenses.propstory.com/project/projectData\", {\r\n        project: e.target.project.value,\r\n        startDate: start,\r\n        endDate: end,\r\n        campaignType: e.target.campaignType.value,\r\n        campaign: e.target.campaignName.value\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        let result = response.data.spendings;\r\n        setResult(result);\r\n        setLoading(false)\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    const _this = this;\r\n\r\n    axios\r\n      .post(\r\n        \"https://expenses.propstory.com/campaign/getCampaignNames\",\r\n        { project_id: project }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        setCampaignNames(response.data.campaigns)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n \r\n}, [project])\r\n\r\n\r\n\r\n  async function _Delete(id) {\r\n    console.log(id);\r\n    setDeleteId(id);\r\n    setShow(true);\r\n  }\r\n  async function handleDelete() {\r\n    await axios\r\n      .post(\r\n        \"https://expenses.propstory.com/expenses/delete\",\r\n        {\r\n          _id: deleteId,\r\n        },\r\n        options\r\n      )\r\n      .then(async function (response) {\r\n        console.log(\"DELETED SUCCESSFULLY\");\r\n        console.log(response);\r\n        setOpenDeleteAlert(true);\r\n        const start = moment(state[0].startDate).format(\"YYYY-MM-DD\")\r\n        const end = moment(state[0].endDate).format(\"YYYY-MM-DD\")\r\n        setLoading(true)\r\n        setViewDate(false)\r\n        setShow(false);\r\n    \r\n        axios\r\n          .post(\"https://expenses.propstory.com/project/projectData\", {\r\n            project: project,\r\n            startDate: start,\r\n            endDate: end,\r\n            campaignType: campaign,\r\n            campaign: campaignName\r\n          })\r\n          .then(function (response) {\r\n            console.log(response);\r\n            let result = response.data.spendings;\r\n            setResult(result);\r\n            setLoading(false)\r\n    \r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async function handleUpdateAllocation(e) {\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\"https://expenses.propstory.com/expenses/updateAllocation\", {\r\n        expense_id: e.target.expenseid.value,\r\n        allocation: e.target.allocation.value,\r\n      })\r\n      .then(setOpen(true), setAlocModal(false));\r\n  }\r\n\r\n  var cpledit = selectedData.TOTAL_SPENDING/selectedData.ACTUAL_LEADS;\r\n  const handleClose = () => setShow(false);\r\n  if (token == null) {\r\n    return <NotLoginView />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Dashboard />\r\n\r\n        <div>\r\n          <CalcDrawer />\r\n          <Button onClick={() => downloadCsv()} variant=\"contained\" color=\"secondary\" startIcon={<AssignmentOutlinedIcon />} style={{ position: \"fixed\", right: 20, bottom: 20, fontWeight: 600 }}> <Typography\r\n            component=\"h6\"\r\n            variant=\"subtitle\"\r\n            style={{ textTransform: \"none\", color: \"#fff\" }}\r\n          >\r\n            Download as csv\r\n              </Typography></Button>\r\n          <Container maxWidth=\"lg\">\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <ReceiptIcon />\r\n              </Avatar>\r\n              <Typography\r\n                style={{ paddingBottom: 16 }}\r\n                component=\"h1\"\r\n                variant=\"subtitle\"\r\n              >\r\n                View Your Project Expenses\r\n              </Typography>\r\n              <form\r\n                className={classes.form}\r\n                noValidate\r\n                onSubmit={handleViewExpenseSubmit}\r\n              >\r\n                <Grid container justify=\"center\" spacing={2} className=\"mb-5\">\r\n\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Select Project\r\n                    </InputLabel>\r\n\r\n                    <select\r\n                      class=\"custom-select\"\r\n                      id=\"projectSelect\"\r\n                      name=\"project\"\r\n                      value={project}\r\n                      onChange={handleChangeProject}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      {props.projects &&\r\n                        props.projects.map((project) => {\r\n                          return (\r\n                            <option key={project._id} value={project._id}>\r\n                              {project.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  </Grid>\r\n                  <Grid item xs={10} sm={4}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Select Campaign Type\r\n                    </InputLabel>\r\n\r\n                    <select\r\n                      className=\"custom-select\"\r\n                      id=\"projectSelect\"\r\n                      name=\"campaignType\"\r\n                      value={campaign}\r\n                      onChange={handleChangeCampaign}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      <option value=\"\">All</option>\r\n                      <option value=\"GDN\">Google - GDN</option>\r\n                      <option value=\"GSN\">Google - GSN</option>\r\n                      <option value=\"Google\">Google</option>\r\n                      <option value=\"Facebook Lead Form\">\r\n                        Facebook Lead Form\r\n                      </option>\r\n                      <option value=\"Facebook LP\">Facebook LP</option>\r\n                      <option value=\"Taboola\">Taboola</option>\r\n                      <option value=\"Calls/Chats\">Calls/Chats</option>\r\n                    </select>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n\r\n                 \r\n                  <Grid item xs={10} sm={3}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Select Date\r\n                    </InputLabel>\r\n                    <input placeholder=\"Date\" style={{ width: \"100%\", height: 35, border: \"1px solid #ced4da\", borderRadius: \"0.25rem\", padding: \".375rem 1.75rem .375rem .75rem\" }} onClick={() => setViewDate(true)} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={1}>\r\n                    <Typography\r\n                      style={{ textAlign: \"center\", marginTop: 20 }}\r\n                      component=\"h4\"\r\n                      variant=\"subtitle\"\r\n                    >\r\n                      OR\r\n              </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={10} sm={3}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Select Campaign Name\r\n                    </InputLabel>\r\n\r\n                    <select\r\n                    className=\"custom-select\"\r\n                    id=\"campaignName\"\r\n                    name=\"campaignName\"\r\n                    required\r\n                    value={campaignName}\r\n                    onChange={handleChangeCampaignName}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                     <option key=\"\" value=\"\">\r\n                          Select Campaign Name\r\n                          </option>\r\n                    {campaignNames &&\r\n                      campaignNames.map((campaignName) => {\r\n                        return (\r\n                          <option key={campaignName._id} value={campaignName._id}>\r\n                            {campaignName.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                  </Grid>\r\n\r\n                  {viewDate && <Grid container direction=\"row\" justify=\"center\" xs={12}>\r\n                    <DateRangePicker\r\n                      onChange={(item) => (setState([item.selection]))}\r\n                      // showSelectionPreview={true}\r\n                      moveRangeOnFirstSelection={false}\r\n                      months={2}\r\n                      ranges={state}\r\n                      direction=\"horizontal\"\r\n                    />\r\n                  </Grid>}\r\n                  {/* <Grid item lg={6} xs={12}>\r\n                  <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                    Start Date\r\n                  </InputLabel>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"startDate\"\r\n                    id=\"outlined-startDate\"\r\n                    type=\"date\"\r\n                    autoComplete=\"startDate\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                    End Date\r\n                  </InputLabel>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"endDate\"\r\n                    id=\"outlined-endDate\"\r\n                    type=\"date\"\r\n                    autoComplete=\"endDate\"\r\n                  />\r\n                </Grid>*/}\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  View Expense\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n          <Container maxWidth=\"lg\">\r\n            {loading ? <Loader\r\n              type=\"TailSpin\"\r\n              color=\"rgb(245, 0, 87)\"\r\n              height={50}\r\n              width={50}\r\n            /> : result.length > 0 ? (\r\n              <Table\r\n                onPressEdit={_Edit}\r\n                onPressDelete={_Delete}\r\n                onEditAllocation={_EditAllocation}\r\n                result={result}\r\n              />\r\n            ) : null}\r\n          </Container>\r\n\r\n          <Modal\r\n            show={modalShow}\r\n            onHide={() => setModalShow(false)}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                EDIT SPENDINGS\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <form\r\n                className={classes.form}\r\n                noValidate\r\n                onSubmit={props.handleUpdateExpense}\r\n              >\r\n                <TextField name=\"expenseid\" hidden value={selectedData.ID} />\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Select Project\r\n                    </InputLabel>\r\n\r\n                    <select\r\n                      className=\"custom-select\"\r\n                      id=\"projectSelect\"\r\n                      name=\"project\"\r\n                      value={project}\r\n                      onChange={handleChangeProject}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      {props.projects &&\r\n                        props.projects.map((project) => {\r\n                          return (\r\n                            <option key={project._id} value={project._id}>\r\n                              {project.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Select Campaign Type\r\n                    </InputLabel>\r\n\r\n                    <select\r\n                      className=\"custom-select\"\r\n                      id=\"projectSelect\"\r\n                      name=\"campaignType\"\r\n                      value={campaign}\r\n                      onChange={handleChangeCampaign}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      <option value=\"GDN\">Google - GDN</option>\r\n                      <option value=\"GSN\">Google - GSN</option>\r\n                      <option value=\"Google\">Google</option>\r\n                      <option value=\"Facebook Lead Form\">\r\n                        Facebook Lead Form\r\n                      </option>\r\n                      <option value=\"Facebook LP\">Facebook LP</option>\r\n                      <option value=\"Taboola\">Taboola</option>\r\n                      <option value=\"Calls/Chats\">Calls/Chats</option>\r\n                    </select>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Select Campaign Name\r\n                  </InputLabel>\r\n\r\n                  <select\r\n                    className=\"custom-select\"\r\n                    id=\"campaignName\"\r\n                    name=\"campaignName\"\r\n                    value={campaignName}\r\n                    onChange={handleChangeCampaignName}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                     <option key=\"\" value=\"\">\r\n                          Select Campaign Name\r\n                          </option>\r\n                    {campaignNames &&\r\n                      campaignNames.map((campaignName) => {\r\n                        return (\r\n                          <option key={campaignName._id} value={campaignName._id}>\r\n                            {campaignName.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <TextField\r\n                      autoComplete=\"actualLeads\"\r\n                      name=\"actualLeads\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"actualLeads\"\r\n                      label=\"Actual Leads\"\r\n                      value={selectedData.ACTUAL_LEADS}\r\n                      onChange={e => {setSelectedData({ACTUAL_LEADS: e.target.value})}}\r\n                      autoFocus\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      name=\"clicks\"\r\n                      label=\"Clicks\"\r\n                      value={selectedData.CLICK}\r\n                      onChange={e => setSelectedData({CLICK: e.target.value})}\r\n                      id=\"clicks\"\r\n                      autoComplete=\"clicks\"\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      name=\"impressions\"\r\n                      label=\"Impressions\"\r\n                      value={selectedData.IMPRESSIONS}\r\n                      onChange={e => setSelectedData({IMPRESSIONS: e.target.value})}\r\n                      id=\"impressions\"\r\n                      autoComplete=\"impressions\"\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      hidden\r\n                      id=\"plannedLeads\"\r\n                      label=\"Planned Leads\"\r\n                      value={selectedData.PLANNED_LEADS}\r\n                      onChange={e => setSelectedData({PLANNED_LEADS: e.target.value})}\r\n                      name=\"plannedLeads\"\r\n                      autoComplete=\"plannedLeads\"\r\n                      size=\"small\"\r\n                    />\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"totalSpending\"\r\n                      label=\"Total Spending\"\r\n                      value={selectedData.TOTAL_SPENDING}\r\n                      onChange={e => setSelectedData({TOTAL_SPENDING: parseInt(e.target.value)})}\r\n                      name=\"totalSpending\"\r\n                      autoComplete=\"totalSpending\"\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      name=\"totalBudget\"\r\n                      label=\"Total Budget\"\r\n                      value={selectedData.TOTAL_BUDGET}\r\n                      onChange={e => setSelectedData({TOTAL_BUDGET: e.target.value})}\r\n                      id=\"totalBudget\"\r\n                      autoComplete=\"totalBudget\"\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                        \r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      name=\"cpl\"\r\n                      hidden\r\n                      label=\"CPL\"\r\n                      placeholder=\"will be calculated after updation\"\r\n                      value={parseFloat(selectedData.CPL)}\r\n                      id=\"cpl\"\r\n                      autoComplete=\"cpl\"\r\n                      size=\"small\"\r\n                    />\r\n                  \r\n                  <Grid item lg={6} xs={12}>\r\n                    <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                      Spending Date\r\n                    </InputLabel>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"spendingDate\"\r\n                      id=\"outlined-spendingDate\"\r\n                      type=\"date\"\r\n                      autoComplete=\"spendingDate\"\r\n                      onChange={e => setSelectedData({SPENT_ON: e.target.value})}\r\n                      value={selectedData.SPENT_ON}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                      Campaign Start Date\r\n                    </InputLabel>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"campaignStartDate\"\r\n                      id=\"outlined-campaignStartDate\"\r\n                      type=\"date\"\r\n                      autoComplete=\"campaignStartDate\"\r\n                      onChange={e => setSelectedData({CAMPAIGN_START_DATE: e.target.value})}\r\n                      value={selectedData.CAMPAIGN_START_DATE}\r\n                    />\r\n                  </Grid>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                  >\r\n                    Update Expense\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid container justify=\"flex-end\"></Grid>\r\n              </form>\r\n            </Modal.Body>\r\n          </Modal>\r\n\r\n          <Modal\r\n            show={alocModal}\r\n            onHide={() => setAlocModal(false)}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                UPDATE ALLOCATION\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <form\r\n                className={classes.form}\r\n                noValidate\r\n                onSubmit={handleUpdateAllocation}\r\n              >\r\n                <TextField name=\"expenseid\" hidden value={selectedData.ID} />\r\n                <Grid item xs={12}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <TextField\r\n                      variant=\"standard\"\r\n                      fullWidth\r\n                      id=\"allocation\"\r\n                      label={\"Allocation \" + selectedData.ALLOCATIONS}\r\n                      name=\"allocation\"\r\n                      autoComplete=\"allocation\"\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                  >\r\n                    Update Allocation\r\n                  </Button>\r\n                </Grid>\r\n              </form>\r\n            </Modal.Body>\r\n          </Modal>\r\n          <Modal show={show} centered animation={false}>\r\n            <Modal.Header>\r\n              <Modal.Title>Are you sure you want to delete?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                CANCEL\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={handleDelete}\r\n              >\r\n                YES! DELETE\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Snackbar\r\n            open={open}\r\n            autoHideDuration={2000}\r\n            onClose={handleCloseAlert}\r\n          >\r\n            <Alert onClose={handleCloseAlert} severity=\"info\">\r\n              Allocation has been updated!\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar\r\n            open={openDeleteAlert}\r\n            autoHideDuration={2000}\r\n            onClose={handleCloseDeleteAlert}\r\n          >\r\n            <Alert onClose={handleCloseAlert} severity=\"success\">\r\n              Selected expense has been deleted successfully!\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { TableFooter } from \"@material-ui/core\";\r\n\r\nconst role = localStorage.getItem(\"userRole\");\r\n\r\nconst columns = [\r\n  { id: \"ID\", label: \"ID\", display: \"none\" },\r\n\r\n  { id: \"CAMPAIGN_NAME\", label: \"CAMPAIGN NAME\", minWidth: 120 },\r\n  {\r\n    id: \"CLICKS\",\r\n    label: \"CLICKS\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"CPC\",\r\n    label: \"CPC\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"CPM\",\r\n    label: \"CPM\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"CPP\",\r\n    label: \"CPP\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"CTR\",\r\n    label: \"CTR\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"IMPRESSIONS\",\r\n    label: \"IMPRESSIONS\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"REACH\",\r\n    label: \"REACH\",\r\n    minWidth: 50,\r\n    align: \"center\",\r\n  },\r\n\r\n  {\r\n    id: \"CAMPAIGN_START_DATE\",\r\n    label: \"CAMPAIGN START DATE\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\nfunction createData(\r\n  ID,\r\n  CAMPAIGN_NAME,\r\n  CLICKS,\r\n  CPC,\r\n  CPM,\r\n  CPP,\r\n  CTR,\r\n  IMPRESSIONS,\r\n  REACH,\r\n  CAMPAIGN_START_DATE\r\n) {\r\n  return {\r\n    ID,\r\n    CAMPAIGN_NAME,\r\n    CLICKS,\r\n    CPC,\r\n    CPM,\r\n    CPP,\r\n    CTR,\r\n    IMPRESSIONS,\r\n    REACH,\r\n    CAMPAIGN_START_DATE,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 580,\r\n  },\r\n});\r\n\r\nexport default function FbExpenseTables(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const rows =\r\n    props.data &&\r\n    props.data.map((expense) => {\r\n      // console.log(totalLead)\r\n      return createData(\r\n        expense._id,\r\n        expense.campaign_name,\r\n        expense.clicks,\r\n        Number(expense.cpc).toFixed(2),\r\n        Number(expense.cpm).toFixed(2),\r\n        Number(expense.cpp).toFixed(2),\r\n        Number(expense.ctr).toFixed(2),\r\n        expense.impressions,\r\n        expense.reach,\r\n        expense.date_start.slice(0,10)\r\n      );\r\n    });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, display: column.display }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n\r\n                      return (\r\n                        <TableCell\r\n                          style={{ display: column.display }}\r\n                          key={column.id}\r\n                          align={column.align}\r\n                        >\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport NotLoginView from \"../NotLoginView\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FbExpenseTable from \"../FbExpenseTable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst token = localStorage.getItem(\"LoginToken\");\r\nconst role = localStorage.getItem(\"userRole\");\r\nconst options = {\r\n  headers: { Authorization: \"Bearer \" + token },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\nexport default function FbExpense(props) {\r\n  const classes = useStyles();\r\n  const [result, setResult] = React.useState([]);\r\n  const [project, setProject] = React.useState(null);\r\n  const [campaigns, setCampaigns] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    getCampaigns();\r\n  }, []);\r\n\r\n  const handleChangeProject = (event) => {\r\n    setProject(event.target.value);\r\n  };\r\n\r\n  const getCampaigns = () => {\r\n    axios\r\n      .get(\"https://expenses.propstory.com/campaign/facebook\", options)\r\n      .then(function (response) {\r\n        // console.log(response);\r\n        setCampaigns(response.data.campaign);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleViewFbExpenseSubmit = (e) => {\r\n    e.preventDefault();\r\n     axios\r\n      .post(\"https://expenses.propstory.com/expenses/getAutomateExpenses\", {\r\n        campaign_id: project,\r\n        start_date: e.target.start_date.value,\r\n        end_date: e.target.end_date.value,\r\n        source: \"facebook\"\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        let result = response.data;\r\n        setResult(result);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  if (token == null) {\r\n    return <NotLoginView />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Dashboard />\r\n      {console.log(project)\r\n      }\r\n        <div>\r\n          <Container maxWidth=\"lg\">\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <FacebookIcon />\r\n              </Avatar>\r\n              <Typography\r\n                style={{ paddingBottom: 16 }}\r\n                component=\"h1\"\r\n                variant=\"subtitle\"\r\n              >\r\n                Facebook Automated Expenses\r\n              </Typography>\r\n            </div>\r\n\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={handleViewFbExpenseSubmit}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item lg={4} xs={12}>\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Select Campaign\r\n                  </InputLabel>\r\n\r\n                  <select\r\n                    class=\"custom-select\"\r\n                    id=\"campaign\"\r\n                    name=\"campaign\"\r\n                    value={project}\r\n                    onChange={handleChangeProject}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    {campaigns &&\r\n                      campaigns.map((campaign) => {\r\n                        return (\r\n                          <option key={campaign.campaign_id} value={campaign.campaign_id}>\r\n                            {campaign.campaign_name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </Grid>\r\n                <Grid item lg={4} xs={12}>\r\n                  <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                    Enter Start Date\r\n                  </InputLabel>\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"start_date\"\r\n                    id=\"outlined-spendingDate\"\r\n                    type=\"date\"\r\n                    autoComplete=\"spendingDate\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={4} xs={12}>\r\n                  <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                    Enter End Date\r\n                  </InputLabel>\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"end_date\"\r\n                    id=\"outlined-campaignStartDate\"\r\n                    type=\"date\"\r\n                    autoComplete=\"campaignStartDate\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                View Facebook Expense\r\n              </Button>\r\n            \r\n            </form>\r\n          </Container>\r\n          <Container maxWidth=\"lg\">\r\n            <FbExpenseTable data={result} />\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { IconButton, MenuItem } from \"@material-ui/core\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport axios from \"axios\";\r\n\r\nconst token = localStorage.getItem(\"LoginToken\");\r\nconst userId = localStorage.getItem(\"LoggedinUser\");\r\n\r\nconst options = {\r\n  headers: { Authorization: \"Bearer \" + token },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 580,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  rootarray: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    boxShadow: \"none\",\r\n  },\r\n}));\r\n\r\nconst handleDelete = () => {\r\n  console.info(\"You clicked the delete icon.\");\r\n};\r\n\r\nconst AssignedProjects = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  let [projects, setProjects] = React.useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"https://expenses.propstory.com/project/getProjects\",\r\n        {\r\n          user_id: user._id,\r\n          company_id: user.company,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setProjects(response.data.projects);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Paper component=\"ul\" className={classes.rootarray}>\r\n      {projects &&\r\n        projects.map((data) => {\r\n          return (\r\n            <li key={data._id}>\r\n              <Chip\r\n                label={data.name}\r\n                className={classes.chip}\r\n                size=\"small\"\r\n                color=\"primary\"\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst StatusSwitch = withStyles({\r\n  switchBase: {\r\n    color: red[600],\r\n    \"&$checked\": {\r\n      color: green[700],\r\n    },\r\n    \"&$checked + $track\": {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\nexport default function ManageUsersTable(props) {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [status, setStatus] = React.useState();\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  const handleChangeStatus = (event) => {};\r\n  const allProjects =\r\n    props.result &&\r\n    props.result.map((project) => {\r\n      // console.log(totalLead)\r\n      return (\r\n        <Chip\r\n          label={project.name}\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          style={{ marginRight: 5 }}\r\n        />\r\n      );\r\n    });\r\n\r\n  const handleChangeSwitch = (user) => {\r\n    axios\r\n      .post(\"https://expenses.propstory.com/users/changeUserStatus\", {\r\n        user_id: user._id,\r\n        status: user.enable ? false : true,\r\n      })\r\n      .then(function (response) {\r\n       props.callUserSubmit()\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        {props.users &&\r\n          props.users.map((user) => {\r\n            return (\r\n              <div className=\"d-flex justify-content-between p-2 border-bottom\">\r\n                <Grid item xs={2}>\r\n                  <h5 style={{ textTransform: \"uppercase\" }}>{user.name}</h5>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  <Chip label={user.role} size=\"small\" variant=\"outlined\" />\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                  {user.role == \"TEAM_MEMBER\" ? (\r\n                    <AssignedProjects user={user} />\r\n                  ) : (\r\n                    <div className=\"d-flex justify-content-start\">\r\n                      {allProjects}\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <StatusSwitch\r\n                        checked={user.enable}\r\n                        onChange={() => handleChangeSwitch(user)}\r\n                        name=\"checkedA\"\r\n                      />\r\n                    }\r\n                    label={user.enable ? \"Activated\" : \"Disabled\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {user.role == \"TEAM_MEMBER\" ? (\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      size=\"small\"\r\n                      onClick={() => props.handleEdit(user)}\r\n                    >\r\n                      <EditIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                  ) : null}\r\n                </Grid>\r\n              </div>\r\n            );\r\n          })}\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst token = localStorage.getItem(\"LoginToken\");\r\n\r\nconst options = {\r\n  headers: { Authorization: \"Bearer \" + token },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  papermodal: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[10],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxWidth: 800,\r\n    borderRadius: 8,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  rootarray: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    boxShadow: \"none\",\r\n  },\r\n}));\r\nvar assignProjects = [];\r\n\r\n\r\nconst AssignedProjects = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n      axios\r\n        .post(\r\n          \"https://expenses.propstory.com/project/getProjects\",\r\n          {\r\n            user_id: user._id,\r\n            company_id: user.company,\r\n          },\r\n          options\r\n        )\r\n        .then(function (response) {\r\n          console.log(response);\r\n          var obj = { userId: user._id, companies: response.data.projects };\r\n          assignProjects.push(obj);\r\n        });\r\n  }, []);\r\n\r\n  return (\r\n    <Paper component=\"ul\" className={classes.rootarray}>\r\n      {assignProjects &&\r\n        assignProjects\r\n          .filter((userhere) => userhere.userId == user._id)\r\n          .map((data) => {\r\n            return data.companies.map((company) => {\r\n              return (\r\n                <li key={company._id}>\r\n                  <Chip\r\n                    label={company.name}\r\n                    className={classes.chip}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                </li>\r\n              );\r\n            });\r\n          })}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AssignedProjects;\r\n","import React, { useEffect, Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport ManageUsersTable from \"./ManageUsersTable\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport NotLoginView from \"./NotLoginView\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport AssignedProjects from \"./AssignedProjects\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst token = localStorage.getItem(\"LoginToken\");\r\nconst userId = localStorage.getItem(\"LoggedinUser\");\r\n\r\nconst options = {\r\n  headers: { Authorization: \"Bearer \" + token },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  papermodal: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[10],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxWidth: 800,\r\n    borderRadius: 8,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  rootarray: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    boxShadow: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function ManageUsers(props) {\r\n  const classes = useStyles();\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [result, setResult] = React.useState([]);\r\n  const [companyUsers, setCompanyUsers] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const [assignProjectId, setAssignProjectId] = React.useState(null);\r\n  const [openSnackBar, setOpenSnackBar] = React.useState(false);\r\n\r\n  const handleChangeCompany = (event) => {\r\n    setCompany(event.target.value);\r\n  };\r\n\r\n  const handleChangeAssignProject = (event) => {\r\n    setAssignProjectId(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    props.handleGetCompanies();\r\n  }, []);\r\n\r\n  const handleEdit = (data) => {\r\n    setData(data);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackBar(false);\r\n  };\r\n\r\n  const handleAssignProject = () => {\r\n    axios\r\n      .post(\r\n        \"https://expenses.propstory.com/project/assignProject\",\r\n        {\r\n          user_id: data._id,\r\n          project_id: assignProjectId,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setOpenSnackBar(true);\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleViewUserSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"https://expenses.propstory.com/api/getCompanyProjects\", {\r\n        company_id: company,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        let result = response.data.companies;\r\n        setResult(result);\r\n      });\r\n\r\n    axios\r\n      .post(\r\n        \"https://expenses.propstory.com/users/getCompanyUsers\",\r\n        {\r\n          company_id: company,\r\n          user_id: userId,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setCompanyUsers(response.data.user);\r\n      });\r\n  };\r\n\r\n  const callUserSubmit = () => {\r\n    axios\r\n      .post(\"https://expenses.propstory.com/api/getCompanyProjects\", {\r\n        company_id: company,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        let result = response.data.companies;\r\n        setResult(result);\r\n      });\r\n\r\n    axios\r\n      .post(\r\n        \"https://expenses.propstory.com/users/getCompanyUsers\",\r\n        {\r\n          company_id: company,\r\n          user_id: userId,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setCompanyUsers(response.data.user);\r\n      });\r\n  };\r\n\r\n  if (token == null) {\r\n    return <NotLoginView />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Dashboard />\r\n        <div>\r\n          <Container maxWidth=\"lg\">\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <GroupIcon />\r\n              </Avatar>\r\n              <Typography\r\n                style={{ paddingBottom: 16 }}\r\n                component=\"h1\"\r\n                variant=\"subtitle\"\r\n              >\r\n                Manage Users\r\n              </Typography>\r\n              <form\r\n                className={classes.form}\r\n                noValidate\r\n                onSubmit={handleViewUserSubmit}\r\n              >\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                  <Grid item sm={6} xs={12}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Select Company\r\n                    </InputLabel>\r\n\r\n                    <select\r\n                      class=\"custom-select\"\r\n                      id=\"projectSelect\"\r\n                      name=\"assignProject\"\r\n                      value={company}\r\n                      onChange={handleChangeCompany}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      <option key={0} value={0}>\r\n                        -- SELECT COMPANY --\r\n                      </option>\r\n                      {props.companies &&\r\n                        props.companies.map((company) => {\r\n                          return (\r\n                            <option key={company._id} value={company._id}>\r\n                              {company.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  View Users\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n          <Container maxWidth=\"lg\">\r\n            {companyUsers.length > 0 ? (\r\n              <ManageUsersTable\r\n                handleEdit={handleEdit}\r\n                users={companyUsers}\r\n                result={result}\r\n                AssignedProjects={AssignedProjects}\r\n                callUserSubmit={callUserSubmit}\r\n              />\r\n            ) : null}\r\n          </Container>\r\n        </div>\r\n        <Modal\r\n          aria-labelledby=\"Manage-user-modal\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.papermodal}>\r\n              <form\r\n                className={classes.form}\r\n                noValidate\r\n                onSubmit={handleAssignProject}\r\n              >\r\n                <TextField name=\"userid\" hidden value={data._id} />\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      User Name\r\n                    </InputLabel>\r\n\r\n                    <h4 style={{ textTransform: \"uppercase\" }}>{data.name}</h4>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Account Status\r\n                    </InputLabel>\r\n                    {data.enable ? (\r\n                      <div className=\"d-flex\">\r\n                        <FiberManualRecordIcon style={{ color: \"#94fc13\" }} />\r\n                        <p> ACTIVED</p>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"d-flex\">\r\n                        <FiberManualRecordIcon style={{ color: \"#fa163f\" }} />\r\n                        <p> NOT ACTIVATED</p>\r\n                      </div>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Assign New Project\r\n                    </InputLabel>\r\n\r\n                    <select\r\n                      class=\"custom-select\"\r\n                      id=\"companySelect\"\r\n                      name=\"company\"\r\n                      value={assignProjectId}\r\n                      onChange={handleChangeAssignProject}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      <option key={0} value={0}>\r\n                        -- SELECT PROJECT --\r\n                      </option>\r\n                      {result &&\r\n                        result.map((project) => {\r\n                          return (\r\n                            <option key={project._id} value={project._id}>\r\n                              {project.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  </Grid>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                  >\r\n                    Update User\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid container justify=\"flex-end\"></Grid>\r\n              </form>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n        <Snackbar\r\n          open={openSnackBar}\r\n          autoHideDuration={6000}\r\n          onClose={handleCloseSnackBar}\r\n        >\r\n          <Alert onClose={handleCloseSnackBar} severity=\"success\">\r\n            Assigned Project Successfully!\r\n          </Alert>\r\n        </Snackbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport axios from \"axios\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport NotLoginView from \"./NotLoginView\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst token = localStorage.getItem('LoginToken');\r\n\r\nconst options = {\r\n    headers: { 'Authorization': 'Bearer ' + token }\r\n\r\n}\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        height: 50,\r\n        fontSize: 24,\r\n        fontWeight: \"bold\"\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function AddCampaignName(props) {\r\n    const classes = useStyles();\r\n\r\n    const [company, setCompany] = React.useState(\"\");\r\n\r\n    const handleChangeCompany = event => {\r\n        setCompany(event.target.value);\r\n        props.handleGetProjects();\r\n    };\r\n\r\n\r\n    const [project, setProject] = React.useState(\"\");\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChangeProject = (event) => {\r\n        setProject(event.target.value);\r\n    };\r\n\r\n\r\n    const handleCampaignNameSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios\r\n            .post(\r\n                \"https://expenses.propstory.com/campaign/addCampaignName\",\r\n                {\r\n                    project_id: e.target.project.value,\r\n                    campaign_name: e.target.campaignName.value,\r\n                    planned_leads: e.target.plannedLeads.value,\r\n                    campaign_start_date: e.target.campaignStartDate.value,\r\n                    total_budget: e.target.totalBudget.value\r\n                },\r\n                options\r\n            )\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setOpen(true)\r\n                setTimeout(() => {\r\n                    window.location.reload(false);\r\n                }, 2000);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        props.handleGetCompanies();\r\n\r\n    }, [props.alert])\r\n\r\n\r\n    if (token == null) {\r\n        return <NotLoginView />;\r\n    } else {\r\n        return (\r\n            <>\r\n                <Dashboard />\r\n                <Container maxWidth=\"md\">\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <AddToPhotosIcon />\r\n                        </Avatar>\r\n                        <Typography style={{ paddingBottom: 16 }} component=\"h1\" variant=\"p\">\r\n                            Add Your Campaign Name\r\n        </Typography>\r\n                        <form\r\n                            className={classes.form}\r\n                            noValidate\r\n                            onSubmit={handleCampaignNameSubmit}\r\n                        >\r\n                            <Grid container  justify=\"center\" spacing={4}>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <InputLabel id=\"demo-simple-select-label\">\r\n                                        Select Company\r\n              </InputLabel>\r\n\r\n                                    <select\r\n                                        class=\"custom-select\"\r\n                                        name=\"company\"\r\n                                        id=\"company\"\r\n                                        onChange={handleChangeCompany}\r\n                                        style={{ width: \"100%\" }}\r\n                                    >\r\n                                        {props.companies && props.companies.map(company => {\r\n                                            return <option value={company._id}>{company.name}</option>;\r\n                                        })}\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <InputLabel id=\"demo-simple-select-label\">\r\n                                        Select Project\r\n                                     </InputLabel>\r\n\r\n                                    <select\r\n                                        className=\"custom-select\"\r\n                                        id=\"projectSelect\"\r\n                                        name=\"project\"\r\n                                        required\r\n                                        value={project}\r\n                                        onChange={handleChangeProject}\r\n                                        style={{ width: \"100%\" }}\r\n                                    >\r\n                                        <option key=\"\" value=\"\">\r\n                                            -- Select Project --\r\n                          </option>\r\n                                        {props.projects &&\r\n                                            props.projects.filter(proj => proj.company == company).map((project) => {\r\n                                                return (\r\n                                                    <option key={project._id} value={project._id}>\r\n                                                        {project.name}\r\n                                                    </option>\r\n                                                );\r\n                                            })}\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={4} xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"campaignName\"\r\n                                        label=\"Choose your Campaign Name\"\r\n                                        id=\"campaignName\"\r\n                                        helperText=\"eg: ProjectName_Month \"\r\n                                        autoComplete=\"campaignName\"\r\n                                        size=\"small\"\r\n                                    />\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={4} xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"plannedLeads\"\r\n                                        label=\"Assign Planned Leads\"\r\n                                        id=\"plannedLeads\"\r\n                                        autoComplete=\"plannedLeads\"\r\n                                        size=\"small\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={4} xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"totalBudget\"\r\n                                        label=\"Assign Total Budget\"\r\n                                        id=\"totalBudget\"\r\n                                        autoComplete=\"totalBudget\"\r\n                                        size=\"small\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} xs={12}>\r\n                                    <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                                        Campaign Start Date\r\n                                     </InputLabel>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"campaignStartDate\"\r\n                                        id=\"outlined-campaignStartDate\"\r\n                                        type=\"date\"\r\n                                        autoComplete=\"campaignStartDate\"\r\n                                    />\r\n                                </Grid>\r\n\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Add Camapign Name\r\n            </Button>\r\n                            </Grid>\r\n\r\n                            <Grid container justify=\"flex-end\"></Grid>\r\n                        </form>\r\n                    </div>\r\n\r\n                </Container>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                        Added your campaign name successfully\r\n        </Alert>\r\n                </Snackbar>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n// export default Login\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport AddExpense from \"./components/AddExpense\";\r\nimport AddCity from \"./components/AddCity\";\r\nimport AddProject from \"./components/AddProject\";\r\nimport AddCompany from \"./components/AddCompany\";\r\nimport { Home, Login, Register, Header, Footer } from \"./components\";\r\nimport ViewExpense from \"./components/ViewExpense\";\r\nimport FbExpense from \"./components/AutomateExpense/FbExpense\";\r\nimport ManageUsers from './components/ManageUsers'\r\nimport AddCampaignName from \"./components/AddCampaignName.jsx\";\r\nconst token = localStorage.getItem(\"LoginToken\");\r\nconst userin = localStorage.getItem(\"LoggedinUser\");\r\nconst userCompany = localStorage.getItem(\"userCompany\");\r\n\r\nconst options = {\r\n  headers: { Authorization: \"Bearer \" + token },\r\n};\r\n\r\nclass App extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      cities: [],\r\n      companies: [],\r\n      campaignData: [],\r\n      show: false,\r\n      projects: [],\r\n      alert: false,\r\n      campaignName: []\r\n    };\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    var Lastclear = localStorage.getItem(\"Lastclear\"),\r\n      Time_now = new Date().getTime();\r\n    //.getTime() returns milliseconds so 1000 * 60 * 60 * 24 = 24 Hours\r\n    if (Time_now - Lastclear > 1000 * 60 * 60 * 24) {\r\n      localStorage.removeItem(\"LoginToken\");\r\n      localStorage.setItem(\"Lastclear\", Time_now);\r\n    }\r\n  };\r\n\r\n  handleGetCompanies = () => {\r\n    axios\r\n      .get(\"https://expenses.propstory.com/api/getCompanies\", options)\r\n      .then((response) => {\r\n        console.log(response);\r\n\r\n        let companies = response.data.companies;\r\n        console.log(companies);\r\n        this.setState({ companies });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleGetProjects = () => {\r\n    var data = {\r\n      user_id: userin,\r\n      company_id: userCompany,\r\n    };\r\n\r\n    axios\r\n      .post(\"https://expenses.propstory.com/project/getProjects\", data, options)\r\n      .then((response) => {\r\n        console.log(response);\r\n\r\n        let projects = response.data.projects;\r\n        \r\n        this.setState({ projects });\r\n        console.log(this.state.projects);\r\n\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleLoginSubmit = async (e) => {\r\n    const _this = this;\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"https://expenses.propstory.com/users/login\", {\r\n        email: e.target.email.value,\r\n        password: e.target.password.value,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        localStorage.setItem(\"LoginToken\", response.data.token);\r\n        localStorage.setItem(\"LoggedinUser\", response.data.user._id);\r\n        localStorage.setItem(\"userCompany\", response.data.user.company);\r\n        localStorage.setItem(\"userRole\", response.data.user.role);\r\n      })\r\n      .then(() => {\r\n        window.location.href = \"https://expenses.propstory.com/viewexpense\";\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleCitySubmit = async (e) => {\r\n    e.preventDefault();\r\n    const _this = this;\r\n\r\n    axios\r\n      .post(\r\n        \"https://expenses.propstory.com/api/addCity\",\r\n        {\r\n          city: e.target.city.value,\r\n          region: e.target.region.value,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        _this.setState({ alert: true });\r\n        setTimeout(() => {\r\n          window.location.reload(false);\r\n        }, 2000);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleCompanySubmit = async (e) => {\r\n    e.preventDefault();\r\n    const _this = this;\r\n\r\n    axios\r\n      .post(\r\n        \"https://expenses.propstory.com/api/addCompany\",\r\n        {\r\n          company: e.target.company.value,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        _this.setState({ alert: true });\r\n        setTimeout(() => {\r\n          window.location.reload(false);\r\n        }, 2000);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleProjectSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let _this = this;\r\n\r\n    axios\r\n      .post(\r\n        \"https://expenses.propstory.com/project/addProject\",\r\n        {\r\n          project: e.target.project.value,\r\n          city: e.target.city.value,\r\n          company: e.target.company.value,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        _this.setState({ alert: true });\r\n        setTimeout(() => {\r\n          window.location.reload(false);\r\n        }, 2000);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleRegisterSubmit = async (e) => {\r\n    console.log(e);\r\n    let _this = this;\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\r\n        \"https://expenses.propstory.com/users/register\",\r\n        {\r\n          name: e.target.name.value,\r\n          email: e.target.email.value,\r\n          company: e.target.company.value,\r\n          password: e.target.password.value,\r\n          password2: e.target.password2.value,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        _this.setState({ alert: true });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  handleExpenseSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const _this = this;\r\n\r\n    await axios\r\n      .post(\r\n        \"https://expenses.propstory.com/expenses\",\r\n        {\r\n          user: userin,\r\n          project: e.target.project.value,\r\n          campaignType: e.target.campaignType.value,\r\n          campaignName: e.target.campaignName.value,\r\n          actualLeads: e.target.actualLeads.value,\r\n          plannedLeads: e.target.plannedLeads.value,\r\n          allocation: e.target.allocation.value,\r\n          totalBudget: e.target.totalBudget.value,\r\n          cpl: e.target.cpl.value,\r\n          clicks: e.target.clicks.value,\r\n          impressions: e.target.impressions.value,\r\n          totalSpending: e.target.totalSpending.value,\r\n          spendingDate: e.target.spendingDate.value,\r\n          campaignStartDate: e.target.campaignStartDate.value,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        _this.setState({ alert: true });\r\n        setTimeout(() => {\r\n          window.location.reload(false);\r\n        }, 2000);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleUpdateExpense = async (e) => {\r\n\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\r\n        \"https://expenses.propstory.com/expenses\",\r\n        {\r\n          _id: e.target.expenseid.value,\r\n          user: userin,\r\n          project: e.target.project.value,\r\n          campaignType: e.target.campaignType.value,\r\n          actualLeads: e.target.actualLeads.value,\r\n          plannedLeads: e.target.plannedLeads.value,\r\n          totalBudget: e.target.totalBudget.value,\r\n          cpl: e.target.totalSpending.value/e.target.actualLeads.value,\r\n          clicks: e.target.clicks.value,\r\n          impressions: e.target.impressions.value,\r\n          totalSpending: e.target.totalSpending.value,\r\n          spendingDate: e.target.spendingDate.value,\r\n          campaignStartDate: e.target.campaignStartDate.value,\r\n          campaignName: e.target.campaignName.value\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n\r\n        alert(\"UPDATED YOUR EXPENSE SUCCESSFULLY\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleViewExpenseSubmit = async (e) => {\r\n    console.log(e);\r\n    console.log(\"VIEWING\");\r\n    const _this = this;\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\r\n        \"https://expenses.propstory.com/project/projectData\",\r\n        {\r\n          project: e.target.project.value,\r\n          startDate: e.target.startDate.value,\r\n          endDate: e.target.endDate.value,\r\n        },\r\n        options\r\n      )\r\n      .then(function (response) {\r\n        console.log(\"comin inside then\");\r\n\r\n        console.log(response);\r\n        const campaignData = response.data.spendings;\r\n        _this.setState({ campaignData });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router>\r\n          <div>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home}></Route>\r\n\r\n              <Route\r\n                exact\r\n                path=\"/users/login\"\r\n                render={() => (\r\n                  <Login handleLoginSubmit={this.handleLoginSubmit} />\r\n                )}\r\n              ></Route>\r\n\r\n              <Route\r\n                exact\r\n                path=\"/users/register\"\r\n                render={() => (\r\n                  <Register\r\n                    alert={this.state.alert}\r\n                    handleRegisterSubmit={this.handleRegisterSubmit}\r\n                  />\r\n                )}\r\n              ></Route>\r\n\r\n              <Route exact path=\"/footer\" component={Footer}></Route>\r\n              {/* <Route  path='/dashboard' component = { Dashboard }></Route>  */}\r\n              {/* <Route exact path=\"/addexpense\" component={AddExpense} hanldeRegisterSubmit={this.hanldeRegisterSubmit}></Route> */}\r\n\r\n              <Route\r\n                exact\r\n                path=\"/addexpense\"\r\n                render={() => (\r\n                  <AddExpense\r\n                    show={this.state.show}\r\n                    handleExpenseSubmit={this.handleExpenseSubmit}\r\n                    handleGetProjects={this.handleGetProjects}\r\n                    handleGetCompanies={this.handleGetCompanies}\r\n                    companies={this.state.companies}\r\n                    projects={this.state.projects}\r\n                    alert={this.state.alert}\r\n                  />\r\n                )}\r\n              ></Route>\r\n\r\n              <Route\r\n                exact\r\n                path=\"/addcity\"\r\n                render={() => (\r\n                  <AddCity\r\n                    user={this.state.user}\r\n                    show={this.state.show}\r\n                    handleCitySubmit={this.handleCitySubmit}\r\n                    alert={this.state.alert}\r\n                  />\r\n                )}\r\n              ></Route>\r\n\r\n              <Route\r\n                exact\r\n                path=\"/addproject\"\r\n                render={() => (\r\n                  <AddProject\r\n                    user={this.state.user}\r\n                    show={this.state.show}\r\n                    handleProjectSubmit={this.handleProjectSubmit}\r\n                    handleGetCompanies={this.handleGetCompanies}\r\n                    companies={this.state.companies}\r\n                    alert={this.state.alert}\r\n                  />\r\n                )}\r\n              ></Route>\r\n\r\n              \r\n\r\n              <Route\r\n                exact\r\n                path=\"/addcompany\"\r\n                render={() => (\r\n                  <AddCompany\r\n                    user={this.state.user}\r\n                    show={this.state.show}\r\n                    handleCompanySubmit={this.handleCompanySubmit}\r\n                    alert={this.state.alert}\r\n                  />\r\n                )}\r\n              ></Route>\r\n              <Route\r\n                exact\r\n                path=\"/add_campaign_name\"\r\n                render={() => (\r\n                  <AddCampaignName\r\n                    user={this.state.user}\r\n                    handleGetProjects={this.handleGetProjects}\r\n                    projects={this.state.projects}\r\n                    handleGetCompanies={this.handleGetCompanies}\r\n                    companies={this.state.companies}\r\n                  />\r\n                )}\r\n              ></Route>\r\n              {/* <Route exact path=\"/viewexpense\" component={ViewExpense}></Route> */}\r\n              <Route\r\n                exact\r\n                path=\"/viewexpense\"\r\n                render={() => (\r\n                  <ViewExpense\r\n                    user={this.state.user}\r\n                    result={this.state.campaignData}\r\n                    handleUpdateExpense={this.handleUpdateExpense}\r\n                    handleViewExpenseSubmit={this.handleViewExpenseSubmit}\r\n                    handleGetProjects={this.handleGetProjects}\r\n                    projects={this.state.projects}\r\n                  />\r\n                )}\r\n              ></Route>\r\n                  <Route\r\n                exact\r\n                path=\"/manageusers\"\r\n                render={() => (\r\n                  <ManageUsers\r\n                    user={this.state.user}\r\n                    handleGetCompanies={this.handleGetCompanies}\r\n                    companies={this.state.companies}\r\n                  />\r\n                )}\r\n              ></Route>\r\n              <Route\r\n                exact\r\n                path=\"/automated_expense/facebook\"\r\n                projects={this.state.projects}\r\n                render={() => <FbExpense />}\r\n              ></Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}